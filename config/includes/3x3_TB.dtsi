/*
 * Last Update 8/30/24
 * 3 COL Trackball
 * 
 */
 
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include "includes/combos.dtsi"
#ifdef MOUSE_KEYS
#    include "includes/mouse.dtsi"
#    define MS_ACT(key) &lt MSE key
#else
#    define MS_ACT(key) &kp key
#endif

// Layer aliases
#define DEF 0
#define SYM 1
#define NUM 2
#define MSE 3
#define MAC 4
#define FUN 5


&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <160>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

/ {
    behaviors {

        bkt: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bracket";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        cln: tap_dance_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_colon";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COLON>, <&kp SEMI>;
        };

        par: tap_dance_paren {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_paren";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        thn: tap_dance_then {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_then";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        qot: tap_dance_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_quote";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        sls: tap_dance_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_slash";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp BSLH>;
        };

        pipe: tap_dance_pipe {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_pipe";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PIPE>, <&kp AMPS>;
        };

        at: tap_dance_at {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_at";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp AT>, <&kp HASH>;
        };

        grvtld: tap_dance_gravetilde {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_gravetilde";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        perc: tap_dance_perc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_perc";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PRCNT>, <&kp DLLR>;
        };

        pg: tap_dance_pg {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_pg";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PG_DN>, <&kp PG_UP>;
        };

        hmend: tap_dance_hmend {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_hmend";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp END>, <&kp HOME>;
        };

        tdW: tap_dance_W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp W>, <&kp ESC>;
        };

        tdO: tap_dance_O {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp COMMA>;
        };

        tdY: tap_dance_Y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp DOT>;
        };

        td20: tap_dance_20 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N2>, <&kp N0>;
        };

        cccv: copy_paste {
           compatible = "zmk,behavior-hold-tap";
           #binding-cells = <2>;
           flavor = "hold-preferred";
           tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        th: ahk_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp T &kp H>
                ;
        };

        re: ahk_re {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp R &kp E>
                ;
        };

        yw: ahk_yw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp Y &kp W>
                ;
        };

        date: ahk_date {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N1 &kp N1>
                ;
        };

        time: ahk_time {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N1 &kp N2>
                ;
        };

        lines: ahk_lines {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N0 &kp N8>
                ;
        };

        square: ahk_square {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N0 &kp N9>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";


// ---------------------------------------------------------------------------------------------------------------
// |   TAB   |    W   [Q]   F   [B]   G num|         |    X    |         |    M   [J]   L    |    U    |  BSPC   |
// |  SHIFT  | A macro[V]   R   [P]   S sym|         |    X    |         |    N   [K]   E   [!]   I    |  DEL    |
// |  XXXX   |  C  fn [Z]   D   [X]   T    |         |    X    |         | H mouse |  O tt,  |  Y  tt. |  XXXX   |
//                     |   CCCV  |SPC/SHFT | RETURN  |    X    |   SPC   | SPC/ENT |   Paste |
// ---------------------------------------------------------------------------------------------------------------
        default_layer {
            display-name = "-DESO-";            
            bindings = <LAYER_FROM38( \
                &none &none     &tdW           &kp F              &lt NUM G          &kp M          &kp L    &kp U        &none &none
                &none &none     &lt MACRO A    &kp R              &lt SYM S          &kp N          &kp E    &kp I        &none &none
                &none &none     &lt FN C       &hrm LCTRL D       &hrm LALT T        &lt MOUSE H    &tdO     &tdY         &none &none
                &none &kp R     &cccv LC(C) LC(V) &mt LSHIFT SPC &mt LSHIFT SPC         &mt RSHIFT RET &mt RSHIFT RET  &kp DEL      &kp A &none
            )>;
        };

        bird_layer {
            display-name = "BRD";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp X,        &kp C,        &kp L,        &kp F,        &kp B,            &kp J,        &kp Y,        &kp O,        &kp U,        &kp SQT,      \
//, ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &aml LCTRL R, &aml LGUI S,  &aml LALT N,  &asl LSHFT T, &kp P,            &kp K,        &asr RSHFT H, &amr RALT E,  &amr RGUI I,  &amr RCTRL A, \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none,        &kp W,        &kp M,        MS_ACT(G),    &none,            &none,        &kp D,        &kp COMMA,    &kp DOT,      &none,        \
//, ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &mt LGUI TAB, &mt LCTRL ESC, &lt NAV SPACE,   &lt SYM BSPC, &mt RSHFT RET, &mt RALT DEL                             \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };

        game_layer {
            display-name = "GME";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp TAB,      &kp Q,        &kp W,        &kp E,        &kp R,            &kp Y,        &kp U,        &kp I,        &kp O,        &kp ESC,   \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT,    &kp A,        &kp S,        &kp D,        &kp F,            &kp H,        &kp J,        &kp K,        &kp L,        &tog GME,  \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp ESC,      &kp Z,        &kp X,        &kp C,        &kp V,            &kp N,        &kp M,        &kp COMMA,    &kp DOT,      &kp SLASH, \
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &kp LCTRL,    &kp LALT,     &kp SPACE,        &mo NAV,      &kp RET,      &tog GME                               \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };

        symbol_layer {
            display-name = "SYM";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp EXCL,     &kp AT,       &kp HASH,     &kp DLLR,     &kp PRCNT,        &kp SLASH,    &kp N7,       &kp N8,       &kp N9,       &kp COMMA, \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp PLUS,     &kp EQUAL,    &kp UNDER,    &kp MINUS,    &kp CARET,        &kp N0,       &kp N4,       &kp N5,       &kp N6,       &kp DOT,   \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none,        &inv_qm,      &kp STAR,     &kp AMPS,     &none,            &kp SEMI,     &kp N1,       &kp N2,       &kp N3,       &kp SLASH, \
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &kp LGUI,     &kp BSPC,     &trans,           &trans,       &none,        &kp RALT                               \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp LA(F4),   &kp TAB_LT,   &kp TAB_RT,   &kp LC(F4),   &kp C_VOL_UP,     &kp INS,      &kp PG_DN,    &kp UP,       &kp PG_UP,    &kp C_AL_CALC, \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LCTRL,    &kp LGUI,     &kp LALT,     &mt LSHFT TAB, &kp C_VOL_DN,    &kp HOME,     &kp LEFT,     &kp DOWN,     &kp RIGHT,    &kp END,       \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none,        &kp LS(TAB),  &swapper,     &kp LS(INS),  &kp C_PP,         &none,        &kp DEL,      &kp C_PREV,   &kp C_NEXT,   &none,         \
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &kp LGUI,     &none,        &trans,           &trans,       &kp SPACE,    &kp RALT                                   \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };

        function_layer {
            display-name = "FUN";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp F1,       &kp F2,       &kp F3,       &kp F4,       &kp F5,           &out OUT_USB, &out OUT_BLE, &to DEF,      &to BRD,      &to GME,      \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp F6,       &kp F7,       &kp F8,       &kp F9,       &kp F10,          &bt BT_SEL 0, &bt BT_SEL 1, &bt BT_SEL 2, &bt BT_SEL 3, &bt BT_SEL 4, \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none,        &kp D_LT,     &kp D_RT,     &kp F11,      &kp F12,          &none,        &kp CAPS,     FN_EXTRA1,    FN_EXTRA2,    &none,        \
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &none,        &rst_boot 0 0, &trans,          &trans,       &rst_boot 0 0, &none                                    \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };

#ifdef MOUSE_KEYS
        mouse_layer {
            display-name = "MSE";
            bindings = <LAYER_FROM36( \
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &none,        &none,        &none,        &none,        &none,          &msc SCRL_LEFT, &msc SCRL_DOWN, &mmv MOVE_UP, &msc SCRL_UP, &msc SCRL_RIGHT, \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LCTRL,    &kp LGUI,     &kp LALT,     &kp LSHFT,    &none,            &mkp RCLK,  &mmv MOVE_LEFT, &mmv MOVE_DOWN, &mmv MOVE_RIGHT, &none,        \
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none,        &none,        &none,        &none,        &none,            &none,        &mkp MB4,     &mkp MCLK,    &mkp MB5,     &none,             \
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                 &none,        &none,        &none,            &mkp LCLK,    &mkp RCLK,    &none                                          \
//                             ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            )>;
        };
#endif
    };
};
