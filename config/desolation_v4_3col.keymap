/*
 * Last Update 12/3/24
 * MM20 Keymap - Desolation v4 3 column
 * 
 */

#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF         0
#define SYM         1
#define NUM         2
#define MSE         3
#define SNP         4
#define MAC         5
#define FN          6

#define SFTENT   &mt RSHIFT ENTER
#define SFTSPC   &mt LSHIFT SPACE
#define CPST     &cccv LC(C) LC(V)
#define CLIP     &kp LC(LA(Q))
#define GSHT     &kp LC(LA(G))
#define MSEH     &lt MSE H
#define MACA     &lt MAC A 
#define NUMG     &lt NUM G
#define SYMS     &lt SYM S 
#define FNC      &lt FN C
#define LCTD     &hrm LCTRL D
#define LLTD     &hrm LALT T
#define RTRN     &kp RET
#define TB       &kp TAB
#define BSP      &kp BSPC
#define BOOT     &bootloader
#define SNPL     &mo SNP
#define NNN      &none

#define MIN   &kp MINUS
#define BSP   &kp BSPC
#define UNDR  &kp UNDER
#define NNN   &none

#define MM_U &mmv MOVE_UP
#define MM_D &mmv MOVE_DOWN
#define MM_R &mmv MOVE_RIGHT
#define MM_L &mmv MOVE_LEFT

#define MS_U &msc MOVE_UP
#define MS_D &msc MOVE_DOWN
#define MS_R &msc MOVE_RIGHT
#define MS_L &msc MOVE_LEFT

#define MCK  &mkp MCLK  
#define RCK  &mkp RCLK  
#define LCK  &mkp LCLK 

&mt {
    tapping-term-ms = <160>;
};

&lt {
    tapping-term-ms = <150>;
};

&mmv_input_listener {
        snipe {
            layers = <SNP>;
            input-processors = <&zip_xy_scaler 1 2>;
        };
        standard {
            layers = <MSE>;
            input-processors = <&zip_xy_scaler 3 1>;
        };
};

/ {
    combos {

        compatible = "zmk,combos";
        combo_q {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp Q>;
        };

        compatible = "zmk,combos";
        combo_b {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp B>;
        };

        compatible = "zmk,combos";
        combo_j {
            timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&kp J>;
        };

        compatible = "zmk,combos";
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp BSPC>;
        };

        compatible = "zmk,combos";
        combo_v {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp V>;
        };

        compatible = "zmk,combos";
        combo_p {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp P>;
        };

        compatible = "zmk,combos";
        combo_k {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp K>;
        };

        compatible = "zmk,combos";
        combo_excl {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp EXCL>;
        };

        compatible = "zmk,combos";
        combo_z {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp Z>;
        };

        compatible = "zmk,combos";
        combo_x {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp X>;
        };

        compatible = "zmk,combos";
        combo_qmark {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp QMARK>;
        };
    };

    behaviors {

        bkt: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bracket";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        cln: tap_dance_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_colon";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COLON>, <&kp SEMI>;
        };

        par: tap_dance_paren {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_paren";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        thn: tap_dance_then {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_then";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        qot: tap_dance_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_quote";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        sls: tap_dance_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_slash";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FSLH>, <&kp BSLH>;
        };

        pipe: tap_dance_pipe {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_pipe";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PIPE>, <&kp AMPS>;
        };

        at: tap_dance_at {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_at";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp AT>, <&kp HASH>;
        };

        grvtld: tap_dance_gravetilde {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_gravetilde";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        perc: tap_dance_perc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_perc";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PRCNT>, <&kp DLLR>;
        };

        pg: tap_dance_pg {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_pg";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp PG_DN>, <&kp PG_UP>;
        };

        hmend: tap_dance_hmend {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_hmend";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp END>, <&kp HOME>;
        };

        tdW: tap_dance_W {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp W>, <&kp ESC>;
        };

        tdO: tap_dance_O {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp O>, <&kp COMMA>;
        };

        tdY: tap_dance_Y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Y>, <&kp DOT>;
        };

        td20: tap_dance_20 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N2>, <&kp N0>;
        };

        cccv: copy_paste {
           compatible = "zmk,behavior-hold-tap";
           #binding-cells = <2>;
           flavor = "hold-preferred";
           tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hrm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        th: ahk_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp T &kp H>
                ;
        };

        em: ahk_em {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp E &kp M>
                ;
        };

        re: ahk_re {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp R &kp E>
                ;
        };

        yw: ahk_yw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp Y &kp W>
                ;
        };

        date: ahk_date {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N1 &kp N1>
                ;
        };

        time: ahk_time {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N1 &kp N2>
                ;
        };

        lines: ahk_lines {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N0 &kp N8>
                ;
        };

        square: ahk_square {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp FSLH &kp FSLH &kp A &kp N0 &kp N9>
                ;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "-DESO-";  
            bindings = <
                NNN NNN &tdW &kp F NUMG      &kp M &kp L &kp U NNN NNN
                NNN NNN MACA &kp R SYMS      &kp N &kp E &kp I NNN NNN
                NNN NNN FNC  LCTD  LLTT      MSEH  &tdO  &tdY  NNN NNN
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB        BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN      &kp HOME      &kp UP
            >;
        };

        sym_layer {
            display-name = "SYMBOL";  
            bindings = <
                NNN NNN &grvtld &kp STAR NNN    &par &bkt &thn  NNN NNN
                NNN NNN NNN     &kp PLUS NNN    &cln &sls &pipe NNN NNN
                NNN NNN NNN     NNN      NNN    &qot &at  &perc NNN NNN
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB        BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN      &kp HOME      &kp UP
            >;
        };

        num_layer {
            display-name = "NUMBER";  
            bindings = <
                NNN NNN &kp TAB &kp STAR NNN        &kp N7 &kp N8 &kp N9 NNN NNN
                NNN NNN NNN     NNN      NNN        &kp N4 &kp N5 &kp N6 NNN NNN
                NNN NNN BOOT    NNN      NNN        &kp N1 &td20  &kp N3 NNN NNN
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB        BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN      &kp HOME      &kp UP
            >;
        };

        mse_layer {
            display-name = "MOUSE";
            bindings = <
                NNN NNN &msc SCRL_UP   &mmv MOVE_UP    &msc SCRL_DOWN   &kp MINUS &kp UNDER  &kp BSPC          NNN NNN
                NNN NNN &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_RIGHT  NNN       NNN        NNN               NNN NNN 
                NNN NNN &mkp MCLK      &mkp RCLK       &mkp LCLK        NNN       NNN        &cccv LC(C) LC(V) NNN NNN
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB        BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN      &kp HOME      &kp UP
            >;
        };

        mac_layer {
            display-name = "MACRO";
            bindings = <
                NNN NNN &bt BT_CLR &bt BT_NXT &bt BT_PRV  NNN NNN NNN NNN NNN
                NNN NNN &trans &lines &square             NNN NNN NNN NNN NNN 
                NNN NNN NNN    &date  &time               &th &re &yw NNN NNN
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB                BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN              &kp HOME      &kp UP
            >;
        };

        fn_layer {
            display-name = "FUNCTION";    
            bindings = <
                NNN NNN   &cccv LC(C) LC(V)  &kp LC(LA(Q))   &kp LC(LA(G))    &kp F2       &kp UP      &kp DEL    NNN NNN 
                NNN NNN   &kp TAB            NNN             &pg              &kp LEFT     &kp DOWN    &kp RIGHT  NNN NNN 
                NNN NNN   &trans             &kp LC(BSPC)    &hmend           &kp LC(Z)    &kp DEL     &kp LC(Y)  NNN NNN 
                        TB    SFTSPC   SFTSPC      SFTENT  SFTENT  BSP
                &kp END    &kp DOWN     TB        BSP           &kp ESC
                &kp RIGHT  &kp LEFT     RTRN      &kp HOME      &kp UP
            >;
        };
    };
};
